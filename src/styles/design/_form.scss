@use "mixins" as *;


.form-input, .form-textarea, .form-select {
    @include field-control();

    &:focus {
        @include field-control-focused();
    }
}

.input-group {
    @apply flex gap-2 items-center;
    @include field-control();

    &:focus-within {
        @include field-control-focused();
    }

    .form-input {
        @apply grow;
    }

    .form-input, .form-input:focus, .form-select, .form-select:focus, .button, .button:focus {
        border-color: transparent;
        --tw-ring-color: transparent;
        --tw-ring-offset-width: 0px;
    }

    & > *:first-child {
        @apply pl-3;
    }

    & > *:last-child {
        @apply pr-3;
    }
}

.checkbox-label {
    @apply ml-2 text-base;
}

.form {
    @apply max-w-md;

    // TODO
    h1,
    h2,
    h3,
    h4,
    h5,
    h6 {
        @apply mt-3 mb-0;
    }

    header {
        @apply mb-2;
    }

    .description {
        @apply text-subtler text-sm;
    }

    .footer {
        @apply mt-4 mb-3;
    }
}

.field {
    @apply block py-3 text-sm;

    .help-text {
        @apply text-subtler block mt-1;
    }
}

.option-list .field {
    @apply py-1;
}

.field-label {
    @apply text-subtle font-medium block mb-1;
}

.form-input,
.form-select,
.form-textarea {
    @apply w-full;
}

.fieldset {
    @apply mt-6;

    legend {
        @apply text-subtle tracking-wide uppercase font-medium text-sm;
    }
}

// code below needs to be validated again
.form-message {
    @apply p-1 block;

    // this is temporary
    &.success {
        @apply text-success;
    }
    &.success svg {
        @apply text-success inline-block;
    }
    &.failed svg {
        @apply text-danger inline-block;
    }
}

.field-error {
    @apply mt-1 block text-danger;
}

.form {
    .ng-submitted .ng-invalid:not(:focus),
    .ng-touched.ng-invalid:not(:focus) {
        @apply border-danger;
    }
}
