# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

general:
  branches:
    ignore:
      - gh-pages

orbs: 
  browser-tools: circleci/browser-tools@1.4.4
  jobs:
    test:
      steps:
        - browser-tools/install-browser-tools:
            chrome-version: 116.0.5845.96
            replace-existing-chrome: true
            # TODO: remove until: https://github.com/CircleCI-Public/browser-tools-orb/issues/75


defaults: &defaults
  docker:
    - image: cimg/node:17.6.0-browsers
      environment:
        CHROME_BIN: /usr/bin/google-chrome

jobs:
  say-hello:
    <<: *defaults
    steps:
      - run:
          name: "Say hello"
          command: "echo Hello, World!"
  test:
    <<: *defaults
    steps:
      - checkout
      - browser-tools/install-browser-tools:
          chrome-version: 116.0.5845.96
          replace-existing-chrome: true
      - run: npm ci
      - run: npm run ng -- test components 
  build:
    <<: *defaults
    steps:
      - checkout
      #- run: npm run lint
      - run:
          name: "version"
          command: |
            sh ./version.sh ${CIRCLE_BUILD_NUM} ${CIRCLE_BRANCH}
      - run:
          name: "version components"
          command: |
            sh ./../../version.sh ${CIRCLE_BUILD_NUM} ${CIRCLE_BRANCH}
          working_directory: ./projects/components
      - run:
          name: "version design"
          command: |
            sh ./../../version.sh ${CIRCLE_BUILD_NUM} ${CIRCLE_BRANCH}
          working_directory: ./projects/design
      - run:
          name: "version @muziehdesign/designsystem"
          command: |
            sh ./../../../version.sh ${CIRCLE_BUILD_NUM} ${CIRCLE_BRANCH}
          working_directory: ./projects/muziehdesign/designsystem
      - run:
          name: "version @muziehdesign/components"
          command: |
            sh ./../../../version.sh ${CIRCLE_BUILD_NUM} ${CIRCLE_BRANCH}
          working_directory: ./projects/muziehdesign/components
      - run: npm ci
      - run: npm run ng -- build design
      - run: npm run ng -- build components
      - run: npm run ng -- build @muziehdesign/designsystem
      - run: npm run ng -- build @muziehdesign/components
      - run: npm run build
      - run: cp -r ./src/styles/design ./dist/design
      - run: cp -r ./src/styles/design ./dist/components/design
      - store_artifacts:
          path: /dist/components
          destination: muzieh-ngcomponents
      - store_artifacts:
          path: /dist/muziehdesign/components
          destination: muziehdesign-components
      - store_artifacts:
          path: /dist/muziehdesign/designsystem
          destination: muziehdesign-designsystem
      - persist_to_workspace:
          root: .
          paths:
            - dist
  publish:
    <<: *defaults
    steps:
      - attach_workspace:
          at: .
      - run: 
          name: "npm publish prep"
          command: |
            touch .npmrc
            echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > .npmrc
      - run: 
          name: 'npm publish'
          command: |
            if [ "$BRANCH" = "master" ] || [ "$BRANCH" = "develop" ] ||  [[ "$BRANCH" = \release\/* ]]; then
              echo "publishing non-beta package"
              npm publish ./dist/components
              npm publish ./dist/design
            else
              echo "publishing beta package"
              npm publish ./dist/components --tag beta
              npm publish ./dist/design --tag beta
            fi
            npm publish ./dist/muziehdesign/components --tag alpha
            npm publish ./dist/muziehdesign/designsystem --tag alpha

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  publish:
    jobs:
      - say-hello:
          filters:
            branches:
              ignore:
                - gh-pages
      - test:
          requires:
            - say-hello
      - build:
          requires:
            - say-hello
      - publish:
          requires:
            - test
            - build

      
